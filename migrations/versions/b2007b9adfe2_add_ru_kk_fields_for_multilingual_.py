"""Add ru/kk fields for multilingual support

Revision ID: b2007b9adfe2
Revises: eb30dbd063d5
Create Date: 2025-04-30 15:03:08.426636

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b2007b9adfe2'
down_revision: Union[str, None] = 'eb30dbd063d5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('specialties', sa.Column('name_ru', sa.String(length=255), nullable=True))
    op.add_column('specialties', sa.Column('name_kk', sa.String(length=255), nullable=True))
    op.add_column('specialties', sa.Column('description_ru', sa.Text(), nullable=True))
    op.add_column('specialties', sa.Column('description_kk', sa.Text(), nullable=True))
    op.add_column('subjects', sa.Column('name_ru', sa.String(length=255), nullable=True))
    op.add_column('subjects', sa.Column('name_kk', sa.String(length=255), nullable=True))
    op.add_column('universities', sa.Column('name_ru', sa.String(length=255), nullable=True))
    op.add_column('universities', sa.Column('name_kk', sa.String(length=255), nullable=True))
    op.add_column('universities', sa.Column('description_ru', sa.Text(), nullable=True))
    op.add_column('universities', sa.Column('description_kk', sa.Text(), nullable=True))
    op.add_column('universities', sa.Column('country_name_ru', sa.String(length=100), nullable=True))
    op.add_column('universities', sa.Column('country_name_kk', sa.String(length=100), nullable=True))
    op.add_column('universities', sa.Column('scholarship_name_ru', sa.String(length=255), nullable=True))
    op.add_column('universities', sa.Column('scholarship_name_kk', sa.String(length=255), nullable=True))
    op.add_column('universities', sa.Column('scholarship_description_ru', sa.Text(), nullable=True))
    op.add_column('universities', sa.Column('scholarship_description_kk', sa.Text(), nullable=True))
    op.add_column('universities', sa.Column('scholarship_benefits_ru', sa.ARRAY(sa.String()), nullable=True))
    op.add_column('universities', sa.Column('scholarship_benefits_kk', sa.ARRAY(sa.String()), nullable=True))
    op.add_column('universities', sa.Column('application_steps_ru', sa.ARRAY(sa.String()), nullable=True))
    op.add_column('universities', sa.Column('application_steps_kk', sa.ARRAY(sa.String()), nullable=True))
    op.drop_index('ix_universities_name', table_name='universities')
    op.create_index(op.f('ix_universities_name_en'), 'universities', ['name_en'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_universities_name_en'), table_name='universities')
    op.create_index('ix_universities_name', 'universities', ['name_en'], unique=False)
    op.drop_column('universities', 'application_steps_kk')
    op.drop_column('universities', 'application_steps_ru')
    op.drop_column('universities', 'scholarship_benefits_kk')
    op.drop_column('universities', 'scholarship_benefits_ru')
    op.drop_column('universities', 'scholarship_description_kk')
    op.drop_column('universities', 'scholarship_description_ru')
    op.drop_column('universities', 'scholarship_name_kk')
    op.drop_column('universities', 'scholarship_name_ru')
    op.drop_column('universities', 'country_name_kk')
    op.drop_column('universities', 'country_name_ru')
    op.drop_column('universities', 'description_kk')
    op.drop_column('universities', 'description_ru')
    op.drop_column('universities', 'name_kk')
    op.drop_column('universities', 'name_ru')
    op.drop_column('subjects', 'name_kk')
    op.drop_column('subjects', 'name_ru')
    op.drop_column('specialties', 'description_kk')
    op.drop_column('specialties', 'description_ru')
    op.drop_column('specialties', 'name_kk')
    op.drop_column('specialties', 'name_ru')
    # ### end Alembic commands ###
